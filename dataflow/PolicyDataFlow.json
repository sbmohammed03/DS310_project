{
	"name": "PolicyDataFlow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Parquet11",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Parquet12",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          CountryName as string,",
				"          CountryCode as string,",
				"          RegionName as string,",
				"          RegionCode as string,",
				"          Jurisdiction as string,",
				"          Date as timestamp,",
				"          SchoolClose as double,",
				"          FlagC1 as double,",
				"          WorkplaceClose as double,",
				"          FlagC2 as double,",
				"          CancelPublicEvents as double,",
				"          FlagC3 as double,",
				"          RestrictionsOnGatherings as double,",
				"          FlagC4 as double,",
				"          ClosePT as double,",
				"          FlagC5 as double,",
				"          SAHReqs as double,",
				"          FlagC6 as double,",
				"          MovementRestrictions as double,",
				"          FlagC7 as double,",
				"          InternationalTravelControls as double,",
				"          IncomeSupport as double,",
				"          FlagE1 as double,",
				"          DebtContractRelief as double,",
				"          FiscalMeasures as double,",
				"          InternationalSupport as double,",
				"          PublicInfoCampaign as double,",
				"          FlagH1 as double,",
				"          TestingPolicy as double,",
				"          ContactTracing as double,",
				"          InvestmentInHealthcare as double,",
				"          InvestmentInVaccines as double,",
				"          FacialCoverings as double,",
				"          FlagH6 as double,",
				"          VaccinationPolicy as double,",
				"          FlagH7 as double,",
				"          ProtectionOfElderly as double,",
				"          FlagH8 as double,",
				"          Wildcare as double,",
				"          StringencyIndex as double,",
				"          StringencyIndexForDisplay as double,",
				"          StringencyLegacyIndex as double,",
				"          StringencyLegacyIndexForDisplay as double,",
				"          GovernmentResponseIndex as double,",
				"          GovernmentResponseIndexForDisplay as double,",
				"          ContainmentHealthIndex as double,",
				"          ContainmentHealthIndexForDisplay as double,",
				"          EconomicSupportIndex as double,",
				"          EconomicSupportIndexForDisplay as double,",
				"          ID as string,",
				"          RID as string,",
				"          SELF as string,",
				"          ETAG as string,",
				"          Attachments as string,",
				"          TS as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> source1",
				"source1 select(mapColumn(",
				"          CountryName,",
				"          CountryCode,",
				"          RegionName,",
				"          RegionCode,",
				"          Jurisdiction,",
				"          Jurisdiction,",
				"          Date,",
				"          SchoolClose,",
				"          FlagC1,",
				"          WorkplaceClose,",
				"          FlagC2,",
				"          CancelPublicEvents,",
				"          FlagC3,",
				"          RestrictionsOnGatherings,",
				"          FlagC4,",
				"          ClosePT,",
				"          FlagC5,",
				"          SAHReqs,",
				"          FlagC6,",
				"          FlagC6 = MovementRestrictions,",
				"          FlagC7,",
				"          InternationalTravelControls,",
				"          IncomeSupport,",
				"          FlagE1,",
				"          DebtContractRelief,",
				"          DebtContractRelief = FiscalMeasures,",
				"          InternationalSupport,",
				"          PublicInfoCampaign,",
				"          FlagH1,",
				"          TestingPolicy,",
				"          ContactTracing,",
				"          InvestmentInHealthcare,",
				"          InvestmentInVaccines,",
				"          FacialCoverings,",
				"          FlagH6,",
				"          VaccinationPolicy,",
				"          FlagH7,",
				"          ProtectionOfElderly,",
				"          FlagH8,",
				"          Wildcard = Wildcare,",
				"          StringencyIndex,",
				"          StringencyIndexForDisplay,",
				"          GovernmentResponseIndex,",
				"          GovernmentResponseIndexForDisplay,",
				"          ContainmentHealthIndex,",
				"          ContainmentHealthIndexForDisplay,",
				"          EconomicSupportIndex,",
				"          EconomicSupportIndexForDisplay,",
				"          ID,",
				"          RID,",
				"          SELF,",
				"          ETAG,",
				"          Attachments,",
				"          TS",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          ID as integer,",
				"          Confirmed as integer,",
				"          Confirmed_Change as integer,",
				"          Country_Region as string",
				"     ),",
				"     format: 'parquet',",
				"     partitionFileNames:['Policies.parquet'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          each(match(/* All input columns */true()),",
				"               /* Input name */$$ = $$)",
				"     ),",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}